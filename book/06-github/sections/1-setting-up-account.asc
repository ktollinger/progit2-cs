=== Zřízení účtu a úprava konfigurace

(((GitHub, uživatelské účty)))
Ze všeho nejdřív si budete muset zřídit (zdarma) uživatelský účet.
Navštivte stránku https://github.com[], vyberte si uživatelské jméno, které zatím není obsazené, vyplňte e-mailovou adresu a heslo a klikněte na velké zelené tlačítko „Sign up for GitHub“ („Zapsat se na GitHub“).

.Formulář pro zapsání se na GitHub.
image::images/signup.png[Formulář pro zapsání se na GitHub.]

Dále se vám zobrazí stránka s cenami pro vylepšené možnosti využití, ale pro tento okamžik ji můžete ignorovat.
GitHub vám pošle e-mail, aby si ověřil zadanou adresu.
Takže to udělejte. Jak uvidíme později, je to docela důležité.

[NOTE]
====
GitHub poskytuje pro účty zdarma plnou funkčnost s tím omezením, že všechny vaše projekty budou plně veřejné (kdokoliv má přístup pro čtení).
Placená služba GitHub v sobě zahrnuje možnost vytváření soukromých projektů, ale v této knize se tím zabývat nebudeme.
====

Kliknutím na logo Octocat (doslova kočka-chobotnička) v levé horní části obrazovky se dostanete na svůj informační panel.
Teď už jste připraveni k používání GitHubu.

==== Přístup SSH

(((SSH klíče, s GitHubem)))
V této chvíli máte ke gitovým repozitářům plný přístup prostřednictvím protokolu `https://`. Svou totožnost prokazujete uživatelským jménem a heslem, které jste právě nastavili.
Ale pokud chcete klonovat veřejný projekt, nemusíte si dokonce ani zřizovat účet. Na účet, který jsme si právě vytvořili, přijde řada až později, kdy si vytvoříme odštěpený projekt (fork) a budeme do něj něco odesílat (push).

Pokud budete chtít používat vzdálený přístup přes SSH, musíte si nakonfigurovat veřejný klíč.
(Pokud zatím žádný nemáte, podívejte se na podkapitolu <<_generate_ssh_key>>.)
Otevřete nastavení vašeho účtu přes odkaz v pravé horní části okna:

.Odkaz „Account settings“ (nastavení účtu).
image::images/account-settings.png[Odkaz „Account settings“ (nastavení účtu).]

Potom vyberte sekci „SSH keys“ v levém panelu.

.Odkaz „SSH keys“.
image::images/ssh-keys.png[Odkaz „SSH keys“.]

Zde klikněte na tlačítko „Add an SSH key“ (přidat SSH klíč), do textové oblasti vložte obsah vašeho souboru s veřejným klíčem `~/.ssh/id_rsa.pub` (nebo jak jste si jej nazvali) a klikněte na tlačítko „Add key“.

[NOTE]
====
Ujistěte se, že svému SSH klíči přidělíte nějaké zapamatovatelné jméno.
Pojmenujte každý ze svých klíčů tak, abyste v případě potřeby jeho pozdějšího použití snadno poznali, který chcete (například „můj laptop“ nebo „účet pro zaměstnání“).
====

[[_personal_avatar]]
==== Osobní avatar

Pokud chcete, můžete si zástupnou osobní ikonku, která vám byla vygenerována, nahradit obrázkem dle vlastního výběru.
Nejdříve se přepněte na záložku „Profile“ (nad záložkou „SSH Keys“) a klikněte na „Upload new picture“ (nahrát nový obrázek).

.Odkaz „Profile“.
image::images/your-profile.png[Odkaz „Profile“.]

My si zde vybereme logo Gitu, které tu máme na disku, a dostaneme možnost obrázek oříznout.

.Ořezání osobního obrázku.
image::images/avatar-crop.png[Ořezání osobního obrázku.]

Když teď budete na stránkách GitHubu něco dělat, lidi vedle vašeho uživatelského jména uvidí vaši zástupnou osobní ikonu.

Pokud už jste náhodou svou zástupnou ikonu nahráli na oblíbenou službu Gravatar (často se používá pro účty Wordpress), použije se standardně tento avatar a nemusíte tento krok provádět.

==== Vaše e-mailová adresa

The way that GitHub maps your Git commits to your user is by email address.
If you use multiple email addresses in your commits and you want GitHub to link them up properly, you need to add all the email addresses you have used to the Emails section of the admin section.

[[_add_email_addresses]]
.Add email addresses
image::images/email-settings.png[Add all your email addresses.]

In <<_add_email_addresses>> we can see some of the different states that are possible.
The top address is verified and set as the primary address, meaning that is where you'll get any notifications and receipts.
The second address is verified and so can be set as the primary if you wish to switch them.
The final address is unverified, meaning that you can't make it your primary address.
If GitHub sees any of these in commit messages in any repository on the site, it will be linked to your user now.

==== Two Factor Authentication

Finally, for extra security, you should definitely set up Two-factor Authentication or ``2FA''.
Two-factor Authentication is an authentication mechanism that is becoming more and more popular recently to mitigate the risk of your account being compromised if your password is stolen somehow.
Turning it on will make GitHub ask you for two different methods of authentication, so that if one of them is compromised, an attacker will not be able to access your account.

You can find the Two-factor Authentication setup under the Security tab of your Account settings.

.2FA in the Security Tab
image::images/2fa-1.png[2FA in the Security Tab]

If you click on the ``Set up two-factor authentication'' button, it will take you to a configuration page where you can choose to use a phone app to generate your secondary code (a ``time based one-time password''), or you can have GitHub send you a code via SMS each time you need to log in.

After you choose which method you prefer and follow the instructions for setting up 2FA, your account will then be a little more secure and you will have to provide a code in addition to your password whenever you log into GitHub.
